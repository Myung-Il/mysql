트랜잭션
- 장애 시 데이터를 복구하는 작업의 단위
- 동시에 같은 데이터 작업 시 서로 분리하는 단위
[ Atomicity, Consistency, Solation, Durability ]
원자성 : 트랜잭션에 포함된 작업은 전부 실행 되지 않는다.
일관성 : 트랜잭션 수행 전이나 후의 데이터베이스는 항상 일관된 상태다.
고립성 : 수행 중인 트랜잭션에 다른 트랜잭션이 끼어들면 안된다.
지속성 : 수행 성공 후 변경된 데이터를 영구적으로 저장해야 된다.

동시성 제어
- 트랜잭션의 데이터에 접근을 제어하는 DBMS의 기능
- 같은 데이터를 공유하는 다른 트랜잭션이 들어오면 일관성이 무너짐

갱신 손실 문제
- 두 개의 트랜잭션이 한 개의 데이터를 동시에 갱신할 때 발생
- 시간 차를 두고 순서대로 실행해야 된다.

락
- 잠금장치 ( 상호 배제 문제 )
- 현재 자신의 데이터를 수정 중임을 알리는 용도
- 읽기 전용 : 공유락
- 읽기/쓰기 : 배타락
1. 락을 걸음 -> 해제함
2. 제한이 없으면 두 개의 트랜잭션이 동시에 실행 됨
3. 데이터 일관성 깨짐

2단계 락킹 ( 한정 대기 문제 )
- 확장 단계 : 트랜잭션이 필요한 락 획득, 이미 획득 시 해제 안함
- 수축 단계 : 락을 해제함, 새로운 락 획득 안함
- 각 트랜잭션이 락을 획득하고 상대 데이터에 락을 요청하면 무한 대기함

데드락
- 서로 무한 대기 상태에 빠져있음