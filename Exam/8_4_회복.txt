회복의 개념
- 데이터베이스에 장애가 발생했을 때, 일관성 있는 상태로 되돌리는 기능
시스템 충돌 : 하드, 소프트의 오류로 주기억 데이터가 손실되는 것
미디어 장애 : 헤드 충돌, 읽기 장애로 보조기억 데이터 손실되는 것
응용 소프트웨어 오류 : DB에 접근한 소프트의 오류로 트랜잭션이 실패됨
자연재해 : 홍수, 지진, 정전으로 손상 됨
부주의 혹은 태업 : 운영자의 부주의로 데이터 손실 또는 의도적 손상

회복과 트랜잭션
- 트랜잭션은 DB의 회복 단위
- 트랜잭션은 데이터의 변경 내용을 한순간에 모두 기록하지 않음
- 변경한 내용(버퍼)을 로그(임시 디스크)에 기록 후 반영
- 장애가 생기면 로그에서 전부 가져오거나 안 함

로그 파일과 회복
- 트랜잭션 수행 중이나 후에 생기는 DB 손실을 막으려 로그 파일을 사용
- 로그 파일은 DB에 기록하기 전에 미리 기록하는 별도의 DB인 셈
- 로그 파일은 하드디스크에 저장되어 있음

로그 파일을 이용한 회복
[ Redo, Undo ]
 - 트랜잭션 재실행
1. 쟁애 후 다시 가동함
2. 로그 파일에 시작과 종료 함께 있음
3. 버퍼에서 안 넘어갔을 수 있으니 다시 기록함
- 트랜잭션 취소
1. 쟁애 후 다시 가동함
2. 로그 파일에 시작은 있지만 종료는 없음
3. 트랜잭션이 하는 일 모두 취소
4. 로그를 보면서 트랜잭션으로 원상 복구
[ Immediate Update, deferred Update ]
- 즉시 갱신 : 부분 완료 전에 버퍼의 일부 데이터를 DB에 반영시켜놓음
- 지연 갱신 : 부분 완료를 하고 실제 DB에 반영하는 방식

체크포인트와 회복
- CP -> Commit : 작업 필요 없음
- Commit -> CP : 재실행 필요
- CP -> ? : 즉시 갱신할거면 트랜잭션 취소, 지연 갱신 할거면 유기해도 됨